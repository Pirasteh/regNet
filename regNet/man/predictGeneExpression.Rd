% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predictGeneExpression.R
\name{predictGeneExpression}
\alias{predictGeneExpression}
\title{Network prediction module: Network-based prediction of gene expression data}
\usage{
predictGeneExpression(data, dataSetName, networkName, pValCutoff,
  localGeneCutoff, path, output = TRUE)
}
\arguments{
\item{data}{Data set containing gene expression and gene copy number profiles for prediction}

\item{dataSetName}{Name of the data set}

\item{networkName}{Name of the network}

\item{pValCutoff}{Cutoff for significant links. Values from zero (most sparse network) to one (full network) are allowed.}

\item{localGeneCutoff}{Cutoff for removement of regulator links from/to genes in close chromosomal proximity. Set this to zero if no links should be removed.}

\item{path}{Project path}

\item{output}{Show progress information. Default: TRUE}
}
\value{
Saves correlation and p-value statistics. See output for details.
}
\description{
This function predicts expression levels of all genes in the data set (data) using the specified network (networkName). Only significant regulatory links (pValCutoff) that are not incoming from genes in close chromosomal proximity up- and downstream (localGeneCutoff) of each specific gene are included in the prediction. This function returns the correlation between the network-based predicted and originally measured expression levels of each gene across all samples in a given data set. Also the corresponding p-value specifying if a gene-specific correlation is greater than zero is returned.
}
\examples{

#Load test and train data set and make test data set compatible to the train data set
testData  = loadGeneExpressionAndCopyNumberDataSet( geneExpressionFile = "TCGA_GBM_ExpressionLevels.txt", geneCopyNumberFile = "TCGA_GBM_CopyNumbers.txt", path = "/home/seifert/regNet/AstrocytomaGrades/Data/" )
trainData = loadGeneExpressionAndCopyNumberDataSet( geneExpressionFile = "AS_SignatureTFs_ExpressionLevels.txt", geneCopyNumberFile = "AS_SignatureTFs_CopyNumbers", path = "/home/seifert/regNet/AstrocytomaGrades/Data/" )
gbmTFData = makeTestDataSetCompatible( testDataSet = testData, trainDataSet = trainData )

#Predict expression levels of TFs in GBMs
projectPath = getProjectPath( projectName = "MyFirstNetwork", path = "/home/seifert/regNet/AstrocytomaGrades/" )
predictGeneExpression( data = gbmTFData, dataSetName = "TCGA_GBM_SignatureTFs", networkName = "AS_SignatureTFs", pValCutoff = 0.01, localGeneCutoff = 0, path = projectPath )

}
